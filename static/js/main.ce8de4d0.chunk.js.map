{"version":3,"sources":["reportWebVitals.js","components/ui/navBar.jsx","API/fake.api/professions.api.js","API/fake.api/user.api.js","API/fake.api/qualities.api.js","API/fake.api/comments.api.js","API/index.js","components/common/form/textField.jsx","components/common/form/selectedField.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","utils/validator.js","components/ui/editFrom.jsx","components/ui/userPage/userCard.jsx","components/ui/qualities/qualitie.jsx","components/ui/qualities/qualitiesList.jsx","components/ui/userPage/qualitiesCard.jsx","components/ui/userPage/meetingsCard.jsx","utils/getDate.js","components/ui/userPage/commentComponents.jsx","components/common/form/selectedFieldsUserComment.jsx","components/common/form/textArea.jsx","components/common/form/addCommentForm.jsx","components/ui/userPage/commentsListComponent.jsx","components/page/userPage/index.js","components/page/userPage/userPage.jsx","components/common/pagination.jsx","components/common/groupList.jsx","components/ui/searchStatus.jsx","components/common/bookmark.jsx","components/ui/qualities/index.js","components/common/table/tableBody.jsx","components/common/table/tableHeader.jsx","components/common/table/index.js","components/common/table/table.jsx","components/ui/usersTable.jsx","components/searchUsers.jsx","utils/searchUserText.js","components/page/usersListPage/usersListPage.jsx","components/page/usersListPage/index.js","utils/paginate.js","layouts/users.jsx","layouts/main.jsx","components/common/form/checkBoxField.jsx","components/ui/loginForm.jsx","components/ui/registerForm.jsx","layouts/login.jsx","app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","className","to","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","data","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","TextField","label","type","value","onChange","error","useState","showPassword","setShowPassword","htmlFor","target","onClick","prevState","defaultProps","SelectedField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","disabled","option","RadioField","handleChange","checked","MultiSelectField","isMulti","classNamePrefix","closeMenuOnSelect","validator","config","errors","validate","validateMethod","statusValidate","trim","test","length","message","fieldName","EditForm","setUser","setProfession","history","useHistory","setErrors","qualitiesAll","setQualitiesAll","useEffect","api","userData","quality","validatorConfig","isRequired","isEmail","qualitiesEdit","newArrayQualities","forEach","qualityAll","isValid","goBack","onSubmit","e","preventDefault","UserCard","src","substring","width","role","Qualitie","getBageclasses","QualitiesList","qualitie","QualitiesCard","MeetingsCard","meetings","getDate","userDate","date","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","CommentComponents","time","deletComment","commentId","alt","height","selectedFieldsUserComment","TextArea","rows","AddCommentForm","updateComments","commentsTextAdd","setCommentsTextAdd","commentsUserAdd","setCommentsUserAdd","usersForSelect","setUsersForSelect","CommentsListComponent","commentsUser","setCommentsUser","_","sortBy","reverse","handleDeletComment","comment","UserPage","edit","useParams","userRender","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","range","page","GroupList","onItemSelect","items","valueProperty","contentProperty","selectedItem","item","itemObject","itemArray","SearchStatus","number","result","classes","renderPhrase","BookMark","status","rest","TableBody","columns","renderContent","column","component","path","get","TableHeader","onSort","selectedSort","caretSort","currentPath","order","undefined","scope","Table","count","children","tableClasses","UsersTable","onBookMark","onDelete","bookMark","delete","SearchUsers","handleSearch","placeholder","searchUserText","String","toLowerCase","indexOf","UserPageList","setCurrentPage","selectedProf","setSelectedProf","iter","setSortBy","setUsers","searchUser","setSearchUser","filteredUsers","isEqual","usersCrop","pageNumber","startIndex","slice","take","paginate","orderBy","clearFilter","console","log","pageIndex","Users","Main","CheckBoxField","Login","password","stayOn","setData","isCapitalSymbol","isContainDigit","min","RegisterForm","licence","setQualities","formType","setFormType","toggleFormType","params","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce8de4d0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n    return (\n        <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Main</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">login</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/users\">Users</Link>\n            </li>\n        </ul>\n    );\n};\n\nexport default NavBar;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"johndorian@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"koks@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bobkelso@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"rachelgreene@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"sheldoncooper@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"leonardhofstedter@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"howardwolowitz@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"nikolatesla@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"monicageller@fastcompany.ru\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatouille@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joeytribbiani@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"bradpitt@fastcompany.ru\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function() {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            // console.log(id);\n            // console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control \" + (error ? \"is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className= {\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                { error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nTextField.defaultProps = {\n    type: \"text\"\n};\n\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectedField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error\n\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select \" + (error ? \"is-invalid\" : \"\");\n    };\n    const optionsArray = !Array.isArray(options) && typeof (options) === \"object\"\n        ? Object.keys(options).map(optionName => ({ name: options[optionName].name, value: options[optionName]._id }))\n        : options;\n    return (<div className=\"mb-4\">\n        <label htmlFor=\"validationCustom04\" className=\"form-label\">{label}</label>\n        <select\n            className={getInputClasses()}\n            id=\"validationCustom04\"\n            name=\"profession\"\n            value={value}\n            onChange={handleChange}\n        >\n            <option disabled value=\"\">{ defaultOption }</option>\n            {optionsArray && optionsArray.map(option => <option\n                value={option.value}\n                key={option.value}\n\n            >\n                {option.name}\n            </option>)}\n        </select>\n        {\n            error && <div className=\"invalid-feedback\">\n                {error}\n            </div>\n        }\n    </div>);\n};\n\nSelectedField.propTypes = {\n    label: PropTypes.string,\n    defaultOption: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    error: PropTypes.string\n};\n\nexport default SelectedField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">\n                {label}\n            </label>\n            <div>\n                {options.map((option) => (\n                    <div key={option.name + \"_\" + option.value} className=\"form-check form-check-inline\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}/>\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({\n    options,\n    onChange,\n    name,\n    label,\n    value\n}) => {\n    const optionsArray = !Array.isArray(options) && typeof (options) === \"object\"\n        ? Object.keys(options).map(optionName => ({ label: options[optionName].name, value: options[optionName]._id }))\n        : options;\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n                closeMenuOnSelect={false}\n                value={value}\n            />\n        </div>);\n};\n\nMultiSelectField.propTypes = {\n    onChange: PropTypes.func,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.array\n\n};\nexport default MultiSelectField;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n        case \"isRequired\":\n            if (typeof data === \"boolean\") {\n                statusValidate = !data;\n            } else {\n                statusValidate = data.trim() === \"\";\n            }\n            break;\n        case \"isEmail\": {\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n            statusValidate = !emailRegExp.test(data);\n            break;\n        }\n        case \"isCapitalSymbol\": {\n            const capitalRegExp = /[A-Z]+/g;\n            statusValidate = !capitalRegExp.test(data);\n            break;\n        }\n        case \"isContainDigit\": {\n            const digitRegExp = /\\d+/g;\n            statusValidate = !digitRegExp.test(data);\n            break;\n        }\n        case \"min\": {\n            statusValidate = data.length < config.value;\n            break;\n        }\n        default:\n            break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../API\";\nimport TextField from \"../common/form/textField\";\nimport SelectedField from \"../common/form/selectedField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport { validator } from \"../../utils/validator\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EditForm = ({ userId }) => {\n    const [user, setUser] = useState({ name: \"\", email: \"\", profession: \"\", sex: \"\", qualities: [] });\n    const [professions, setProfession] = useState();\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const [qualitiesAll, setQualitiesAll] = useState({});\n    useEffect(() => {\n        api.users.getById(userId).then((userData) => {\n            setUser({\n                name: userData.name,\n                email: userData.email,\n                profession: userData.profession._id,\n                sex: userData.sex,\n                qualities: userData.qualities.map(quality => ({\n                    label: quality.name,\n                    value: quality._id\n                }))\n            });\n        });\n        api.professions.fetchAll().then((data) => {\n            setProfession(data);\n        });\n        api.qualities.fetchAll().then((qualities) => {\n            setQualitiesAll(qualities);\n        });\n    }, []);\n    const handleChange = (target) => {\n        setUser((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Эдектронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Эдектронная почта введена не корректно\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [user]);\n    const validate = () => {\n        const errors = validator(user, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const qualitiesEdit = () => {\n        const newArrayQualities = [];\n        user.qualities.forEach((quality) => {\n            Object.keys(qualitiesAll).forEach((qualityAll) => {\n                if (qualitiesAll[qualityAll]._id === quality.value) {\n                    newArrayQualities.push(qualitiesAll[qualityAll]);\n                };\n            });\n        });\n        return newArrayQualities;\n    };\n    const goToUser = () => {\n        history.push(`/users/${userId}`);\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValidate = validate();\n        if (!isValidate) return;\n        const data = {\n            name: user.name,\n            email: user.email,\n            profession: professions[Object.keys(professions).filter(profession => professions[profession]._id === user.profession)],\n            sex: user.sex,\n            qualities: qualitiesEdit()\n        };\n        api.users.update(userId, data);\n        goToUser();\n    };\n    return (<>\n        { Object.keys(qualitiesAll).length > 0\n            ? (<div className=\"d-flex flex-row offset-md-2\">\n                <div>\n                    <button\n                        onClick={history.goBack}\n                        type=\"button\" className=\"btn btn-success m-4\">\n                Назад\n                    </button>\n                </div>\n                <div className=\"col-md-6 shadow p-4\">\n                    <div className=\"container\">\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={user.name}\n                                onChange={handleChange} />\n                            <TextField\n                                label=\"Email\"\n                                name=\"email\"\n                                value={user.email}\n                                onChange={handleChange}\n                                error={errors.email} />\n                            <SelectedField\n                                options={professions}\n                                defaultOption=\"Choose...\"\n                                label=\"Выберете вашу профессию\"\n                                value={user.profession.name}\n                                onChange={handleChange} />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                name=\"sex\"\n                                value={user.sex}\n                                onChange={handleChange}\n                                label=\"Выберете пол:\" />\n                            <MultiSelectField\n                                onChange={handleChange}\n                                options={qualitiesAll}\n                                name=\"qualities\"\n                                label=\"Выберете качества:\"\n                                value={user.qualities} />\n                            <button disabled={!isValid}\n                                className=\"btn btn-primary \"\n                            >\n                                Сохранить\n                            </button>\n                        </form>\n                    </div>\n                </div></div>)\n            : (<div className=\"container\"> <h1>loading...</h1></div>)}\n    </>);\n};\nEditForm.propTypes = {\n    userId: PropTypes.string\n};\n\nexport default EditForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserCard = ({ name, profession, rate, userId }) => {\n    const history = useHistory();\n    const goToEdit = () => {\n        history.push(`/users/${userId}/edit`);\n    };\n    return (<div className=\"card mb-3\">\n        <div className=\"card-body\">\n            <button className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"onClick={goToEdit} >\n                <i className=\"bi bi-gear\"></i>\n            </button>\n            <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                <img\n                    src={`https://avatars.dicebear.com/api/avataaars/${(\n                        Math.random() + 1\n                    )\n                        .toString(36)\n                        .substring(7)}.svg`}\n                    className=\"rounded-circle\"\n                    width=\"150\"\n                />\n                <div className=\"mt-3\">\n                    <h4>{name}</h4>\n                    <p className=\"text-secondary mb-1\">{profession}</p>\n                    <div className=\"text-muted\">\n                        <i className=\"bi bi-caret-down-fill text-primary\" role=\"button\"></i>\n                        <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\n                        <span className=\"ms-2\">{rate}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>);\n};\n\nUserCard.propTypes = {\n    name: PropTypes.string,\n    rate: PropTypes.number,\n    profession: PropTypes.string,\n    goToEdit: PropTypes.func,\n    userId: PropTypes.string\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Qualitie = ({ color, _id, name }) => {\n    const getBageclasses = (color) => {\n        const classes = `badge m-2 bg-${color}`;\n        return classes;\n    };\n\n    return (\n        <span key={_id} className={getBageclasses(color)}>\n            {name}\n        </span>\n    );\n};\n\nQualitie.propTypes = {\n    color: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n};\nexport default Qualitie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Qualitie from \"../qualities/qualitie\";\n\nconst QualitiesList = ({ qualities }) => {\n    return <>\n        {qualities.map((qualitie) => (\n            <Qualitie key={qualitie._id} {...qualitie} />\n        ))}\n    </>;\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"../qualities/qualitiesList\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ qualities }) => {\n    return (<div className=\"card mb-3\">\n        <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n            <h5 className=\"card-title\">\n                <span>Qualities</span>\n            </h5>\n            <p className=\"card-text\">\n                <Qualities qualities={qualities}/>\n            </p>\n        </div>\n    </div>);\n};\n\nQualitiesCard.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MeetingsCard = ({ meetings }) => {\n    return (<div className=\"card mb-3\">\n        <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n            <h5 className=\"card-title\">\n                <span>Completed meetings</span>\n            </h5>\n\n            <h1 className=\"display-1\">{meetings}</h1>\n        </div>\n    </div>);\n};\n\nMeetingsCard.propTypes = {\n    meetings: PropTypes.number\n};\n\nexport default MeetingsCard;\n","export function getDate(userDate) {\n    const date = new Date(parseInt(userDate));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минуту назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return ` ${date.getHours()}:${date.getMinutes()}`;\n        }\n        return ` ${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes, { oneOfType } from \"prop-types\";\nimport { getDate } from \"../../../utils/getDate\";\nimport api from \"../../../API\";\n\nconst CommentComponents = ({ userId, time, content, deletComment, commentId }) => {\n    const [user, setUser] = useState([]);\n    useEffect(() => {\n        api.users.getById(userId).then((userData) => {\n            setUser(userData);\n        });\n    }, []);\n    return (<>{\n        user.name\n            ? (<div className=\"bg-light card-body  mb-3\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user.name}\n                                            <span className=\"small\">\n                                                {getDate(time)}\n                                            </span>\n                                        </p>\n                                        <button className=\"btn btn-sm text-primary d-flex align-items-center\" >\n                                            <i onClick={() => deletComment(commentId)} className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>)\n            : \"\"\n    }</>\n    );\n};\n\nCommentComponents.propTypes = {\n    userId: PropTypes.string,\n    time: oneOfType([PropTypes.string, PropTypes.number]),\n    content: PropTypes.string,\n    deletComment: PropTypes.func,\n    commentId: PropTypes.string\n};\n\nexport default CommentComponents;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst selectedFieldsUserComment = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options\n}) => {\n    return (<div className=\"mb-4\">\n        <label htmlFor=\"validationCustom04\" className=\"form-label\">{label}</label>\n        <select\n            className=\"form-select\"\n            id=\"validationCustom04\"\n            name=\"users\"\n            value={value}\n            onChange={onChange}\n        >\n            <option disabled value=\"\">{ defaultOption }</option>\n            {options && options.map(option => <option\n                value={option.value}\n                key={option.value}\n            >\n                {option.name}\n            </option>)}\n        </select>\n    </div>);\n};\n\nselectedFieldsUserComment.propTypes = {\n    label: PropTypes.string,\n    defaultOption: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\n\nexport default selectedFieldsUserComment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextArea = ({ name, rows, onChange, value }) => {\n    return (<div className=\"form-group mb-4\">\n        <label htmlFor=\"exampleFormControlTextarea1\">{name}</label>\n        <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows={rows} onChange={onChange}\n            value={value}\n        >\n            {value}\n        </textarea>\n    </div>);\n};\n\nTextArea.propTypes = {\n    name: PropTypes.string,\n    rows: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string\n};\nexport default TextArea;\n","import React, { useState, useEffect } from \"react\";\nimport SelectedFieldsUserComment from \"./selectedFieldsUserComment\";\nimport TextArea from \"./textArea\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\n\nconst AddCommentForm = ({ userId, updateComments }) => {\n    const [commentsTextAdd, setCommentsTextAdd] = useState();\n    const [commentsUserAdd, setCommentsUserAdd] = useState(\"\");\n    const [usersForSelect, setUsersForSelect] = useState();\n\n    useEffect(() => {\n        api.users.fetchAll().then((userData) => {\n            setUsersForSelect(userData.map((data) => ({\n                name: data.name,\n                value: data._id\n            })));\n        });\n    }, []);\n\n    const submitComment = (e) => {\n        e.preventDefault();\n        const data = {\n            content: commentsTextAdd,\n            pageId: userId,\n            userId: commentsUserAdd\n        };\n        api.comments.add(data);\n        updateComments();\n        setCommentsTextAdd(\" \");\n        setCommentsUserAdd(\"\");\n    };\n    const handleChangeUserComment = ({ target }) => {\n        setCommentsUserAdd(target.value);\n    };\n    const handleChangeTextCooment = ({ target }) => {\n        setCommentsTextAdd(target.value);\n    };\n    return (<div className=\"card-body \">\n        <h2>New comments</h2>\n        <hr />\n        <form className=\"container d-flex flex-column\">\n\n            <SelectedFieldsUserComment\n                options={usersForSelect}\n                onChange={handleChangeUserComment}\n                label = \"Выберете пользователя\"\n                defaultOption=\"Choose...\"\n                value={commentsUserAdd}\n            />\n            <TextArea\n                name={\"Сообщение\"}\n                rows={\"3\"}\n                onChange={handleChangeTextCooment}\n                value={commentsTextAdd}\n            />\n            <div className=\"d-flex justify-content-end\">\n                <button onClick={submitComment}\n                    className=\"btn btn-primary\"\n                >\n                      Сохранить\n                </button>\n            </div>\n        </form>\n    </div>);\n};\n\nAddCommentForm.propTypes = {\n    userId: PropTypes.string,\n    updateComments: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import React, { useState, useEffect } from \"react\";\nimport CommentComponents from \"../userPage/commentComponents\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport _ from \"lodash\";\nimport AddCommentForm from \"../../common/form/addCommentForm\";\n\nconst CommentsListComponent = ({ userId }) => {\n    const [commentsUser, setCommentsUser] = useState();\n    const updateComments = () => {\n        api.comments.fetchCommentsForUser(userId).then((userData) => {\n            setCommentsUser(_.sortBy(userData, \"created_at\").reverse());\n        });\n    };\n    useEffect(() => {\n        updateComments();\n    }, []);\n\n    const handleDeletComment = (commentId) => {\n        api.comments.remove(commentId);\n        api.comments.fetchCommentsForUser(userId).then((userData) => {\n            setCommentsUser(_.sortBy(userData, \"created_at\"));\n        });\n    };\n    return (<>\n        <div className=\"card mb-2\">\n            <AddCommentForm\n                userId = {userId}\n                updateComments={updateComments}\n            />\n        </div><div className=\"card mb-3\">\n            <div className=\"card-body \">\n                <h2>Comments</h2>\n                <hr />\n                {commentsUser && commentsUser.map(comment => (\n                    <CommentComponents\n                        key={comment._id}\n                        commentId={comment._id}\n                        time={comment.created_at}\n                        content={comment.content}\n                        userId={comment.userId}\n                        deletComment={handleDeletComment}/>))}\n            </div>\n        </div></>);\n};\n\nCommentsListComponent.propTypes = {\n    userId: PropTypes.string,\n    deletComment: PropTypes.func\n};\n\nexport default CommentsListComponent;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport { useParams } from \"react-router-dom\";\nimport EditForm from \"../../ui/editFrom\";\nimport UserCard from \"../../ui/userPage/userCard\";\nimport QualitiesCard from \"../../ui/userPage/qualitiesCard\";\nimport MeetingsCard from \"../../ui/userPage/meetingsCard\";\nimport CommentsListComponent from \"../../ui/userPage/commentsListComponent\";\n\nconst User = ({ userId }) => {\n    const [user, setUser] = useState();\n    const params = useParams();\n    const { edit } = params;\n    useEffect(() => {\n        api.users.getById(userId).then((userData) => {\n            setUser(userData);\n        });\n    }, []);\n    const userRender = (user) => {\n        return <>\n            { edit === \"edit\"\n                ? <EditForm userId = {userId}/>\n                : <div className=\"container\">\n                    <div className=\"row gutters-sm\">\n                        <div className=\"col-md-4 mb-3\">\n                            <UserCard\n                                name = {user.name}\n                                rate = {user.rate}\n                                profession={user.profession.name}\n                                userId={userId}\n                            />\n                            <QualitiesCard qualities={user.qualities}/>\n                            <MeetingsCard meetings={user.completedMeetings}/>\n                        </div>\n                        <div className=\"col-md-8\">\n                            <CommentsListComponent userId={userId}\n                            />\n                        </div>\n                    </div> </div>}\n        </>;\n    };\n    return (<>\n        { user\n            ? (userRender(user))\n            : (<div className=\"container\">\n                <h1>loading...</h1>\n            </div>)}\n    </>\n    );\n};\n\nUser.propTypes = {\n    userId: PropTypes.string\n};\nexport default User;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pageCount + 1);\n    if (pageCount === 1) {\n        return null;\n    }\n    return (\n        <nav aria-label=\"Page navigation example\">\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\"page-item\" + (page === currentPage ? \"active\" : \"\")}\n                    >\n                        <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({ onItemSelect, items, valueProperty, contentProperty, selectedItem }) => {\n    const itemObject = (items) => {\n        return (Object.keys(items).map(item =>\n            <li\n                key={items[item][valueProperty]}\n                className={\n                    \"list-group-item\" +\n                    (items[item] === selectedItem ? \" active\" : \"\")}\n                onClick={ () => onItemSelect(items[item])}\n                role=\"button\"\n            >\n                {items[item][contentProperty]}\n            </li>\n        ));\n    };\n    const itemArray = (items) => {\n        return (items.map(item => (\n            <li\n                key={item[valueProperty]}\n                className={\n                    \"list-group-item\" +\n                    (item === selectedItem ? \" active\" : \"\")}\n                onClick={ () => onItemSelect(item)}\n                role=\"button\"\n            >\n                {item[contentProperty]}\n            </li>\n        )));\n    };\n    return (<ul className=\"list-group\">\n        {(typeof items === \"object\") ? itemObject(items) : itemArray(items)}\n    </ul>);\n};\n\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\n\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func.isRequired,\n    selectedItem: PropTypes.object\n};\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        let classes = \"h1 badge bg-\";\n        let result;\n        if (number === 0) {\n            classes += \"danger\";\n            result = `Никто не тусанет сегодня с тобой`;\n            // tableClasses += \" d-none\";\n        } else {\n            classes += \"primary\";\n            if ((number > 1) & (number < 5)) {\n                result = `${number} человека тусанет с тобой сегодня`;\n            } else {\n                result = `${number} человек тусанет с тобой сегодня`;\n            }\n        }\n        return (\n            <h2>\n                <span className={classes}>{result}</span>\n            </h2>\n        );\n    };\n    return <div>{renderPhrase(length)}</div>;\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number.isRequired\n};\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import Qualitie from \"./qualitiesList\";\nexport default Qualitie;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        if (columns[column].path === \"name\") {\n            return <Link to={`/users/${item._id}`}>{ _.get(item, columns[column].path)}</Link>;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (<td key={column}>\n                        {renderContent(item, column)}\n                    </td>))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const caretSort = (selectedSort, currentPath) => {\n        if (currentPath) {\n            if (selectedSort.path === currentPath) {\n                return <i className={\"bi bi-caret-\" + (selectedSort.order === \"asc\" ? \"up-fill\" : \"down-fill\") } ></i>;\n            }\n        }\n        return null;\n    };\n    const handlerSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({ ...selectedSort, order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\" });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handlerSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\">{columns[column].name}\n                        {caretSort(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\n","import Table from \"./table\";\n\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\nexport default Table;\nexport {\n    TableBody, TableHeader\n};\n","import React from \"react\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\nimport PropTypes from \"prop-types\";\n\nconst Table = ({ onSort, selectedSort, columns, data, count, children }) => {\n    let tableClasses = \"table\";\n    if (count === 0) {\n        tableClasses += \" d-none\";\n    }\n    return (\n        <table className={tableClasses} id=\"table\">\n            {children ||\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {... { columns, data }} />\n                </>\n            }\n        </table>\n    );\n};\n\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"../ui/qualities\";\nimport Table, { TableHeader, TableBody } from \"../common/table\";\n\nconst UsersTable = ({ count, users, onSort, selectedSort, onBookMark, onDelete, ...rest }) => {\n    const columns = {\n        name: { path: \"name\", name: \"Имя\" },\n        qualities: { name: \"Качества\", component: (user) => (<Qualities qualities={ user.qualities }/>) },\n        profession: { path: \"profession.name\", name: \"Профессия\" },\n        completedMeetings: { path: \"completedMeetings\", name: \"Встретился,раз\" },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookMark: { path: \"bookMark\", name: \"Избранное\", component: (user) => (<BookMark status={user.bookmark} onClick={() => onBookMark(user._id)} />) },\n        delete: {\n            component: (user) => (<button onClick={() => onDelete(user._id)} className=\"btn btn-danger btn-sm\">\n            Удалить\n            </button>)\n\n        }\n    };\n    return (\n        <Table onSort={onSort} selectedSort={selectedSort} columns = {columns} data = {users} count={count}>\n            <TableHeader {...{ onSort, selectedSort, columns }} />\n            <TableBody {... { columns, data: users }} />\n        </Table>\n    );\n};\n\nUsersTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onSort: PropTypes.func.isRequired,\n    onBookMark: PropTypes.func.isRequired,\n    _id: PropTypes.func,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default UsersTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchUsers = ({ value, handleSearch }) => {\n    return (\n        <input type=\"text\"\n            value={value}\n            onChange={handleSearch}\n            placeholder=\"Search...\"\n        />);\n};\n\nSearchUsers.propTypes = {\n    value: PropTypes.string,\n    handleSearch: PropTypes.func\n};\n\nexport default SearchUsers;\n","export function searchUserText(user, value) {\n    if (String(user).toLowerCase().indexOf(String(value).toLowerCase()) !== -1) {\n        return true;\n    } else { return false; }\n};\n","import React, { useState, useEffect } from \"react\";\nimport Pagination from \"../../common/pagination\";\nimport { paginate } from \"../../../utils/paginate\";\nimport GroupList from \"../../common/groupList\";\nimport api from \"../../../API\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport _ from \"lodash\";\nimport UsersTable from \"../../ui/usersTable\";\nimport SearchUsers from \"../../searchUsers\";\nimport { searchUserText } from \"../../../utils/searchUserText\";\n\nconst UsersListPage = () => {\n    const pageSize = 6;\n    const [currentPage, setCurrentPage] = useState(1);\n    const [professions, setProfession] = useState();\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ iter: \"name\", order: \"asc\" });\n    const [users, setUsers] = useState();\n    const [searchUser, setSearchUser] = useState(\"\");\n    useEffect(() => {\n        api.users.fetchAll().then((data) => {\n            setUsers(data);\n        }, []);\n    });\n\n    const handleDelete = (userId) => {\n        setUsers(users.filter((user) => user._id !== userId));\n    };\n\n    const handleBookMark = (userId) => {\n        setUsers(\n            users.map((user) => {\n                if (user._id === userId) {\n                    user.bookmark = !user.bookmark;\n                }\n                return user;\n            })\n        );\n    };\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            setProfession(data);\n        });\n    }, []);\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf]);\n\n    const handlePageCahge = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleProfessionSelect = (item) => {\n        setSearchUser(\"\");\n        setSelectedProf(item);\n    };\n\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        const filteredUsers = searchUser !== \"\"\n            ? users.filter((user) => searchUserText(user.name, searchUser))\n            : (selectedProf ? users.filter((user) => _.isEqual(user.profession, selectedProf)) : users);\n\n        const count = filteredUsers.length;\n        const handleSearch = ({ target }) => {\n            clearFilter();\n            setSearchUser(target.value);\n            console.log(users.filter((user) => searchUserText(user.name, searchUser)));\n        };\n        const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n            setSearchUser(\"\");\n        };\n        return (\n            <div className=\"d-flex\">\n                {professions && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            items={professions}\n                            selectedItem = {selectedProf}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >{\" \"}Очистить</button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <SearchUsers value={searchUser} handleSearch={handleSearch}/>\n                    <UsersTable\n                        users={usersCrop}\n                        count={count}\n                        onSort = {handleSort}\n                        selectedSort = {sortBy}\n                        onDelete = {handleDelete}\n                        onBookMark = {handleBookMark}\n                    />\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageCahge}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n    return <div className=\"container\">\n        <h1>loading...</h1>\n    </div>;\n};\n\nexport default UsersListPage;\n","import UserPageList from \"./usersListPage\";\nexport default UserPageList;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport User from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\n\nconst Users = () => {\n    const params = useParams();\n    const { userId } = params;\n    return <>\n        {userId\n            ? (<User userId={userId}/>)\n            : (<UsersListPage />)}\n    </>;\n};\n\nexport default Users;\n","import React from \"react\";\n\nconst Main = () => {\n    return <h2>Main</h2>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input \" + (error ? \"is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input className={getInputClasses()} type=\"checkbox\" value=\"\" id={name} onChange={handleChange} checked={value}/>\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            { error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>);\n};\n\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst Login = () => {\n    const [data, setData] = useState({ email: \"\", password: \"\", stayOn: false });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Эдектронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Эдектронная почта введена не корректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать цифру\"\n            },\n            min: {\n                value: 8,\n                message: \"Пароль должен быть больше 7 символов\"\n            }\n\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValidate = validate();\n        if (!isValidate) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label = \"Email\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error = {errors.email}\n            />\n            <TextField\n                label = \"Password\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error = {errors.password}\n            />\n            <CheckBoxField\n                onChange={handleChange}\n                value={data.stayOn}\n                name=\"stayOn\"\n            >\n                    Отстаться в системе\n            </CheckBoxField>\n            <button disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                            Submit\n            </button>\n        </form>\n    );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport TextField from \"../common/form/textField\";\nimport { validator } from \"../../utils/validator\";\nimport api from \"../../API\";\nimport SelectedField from \"../common/form/selectedField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [professions, setProfession] = useState();\n    const [data, setData] = useState({ email: \"\", password: \"\", profession: \"\", sex: \"male\", qualities: [], licence: false });\n    const [qualities, setQualities] = useState({});\n    const [errors, setErrors] = useState({});\n    useEffect(() => {\n        api.professions.fetchAll().then((data) => {\n            setProfession(data);\n        });\n        api.qualities.fetchAll().then((qualities) => {\n            setQualities(qualities);\n        });\n    }, []);\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Эдектронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Эдектронная почта введена не корректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать цифру\"\n            },\n            min: {\n                value: 8,\n                message: \"Пароль должен быть больше 7 символов\"\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Профессия обязательно должна быть выбрана\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message: \"Лицензия должна быть подтверждена\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValidate = validate();\n        if (!isValidate) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label = \"Email\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error = {errors.email}\n            />\n            <TextField\n                label = \"Password\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error = {errors.password}\n            />\n            <SelectedField\n                options={professions}\n                defaultOption=\"Choose...\"\n                label = \"Выберете вашу профессию\"\n                value={data.profession}\n                onChange={handleChange}\n                error = {errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                name=\"sex\"\n                value={data.sex}\n                onChange={handleChange}\n                label=\"Выберете пол:\"\n            />\n            <MultiSelectField\n                onChange={handleChange}\n                options={qualities}\n                name=\"qualities\"\n                label=\"Выберете качества:\"\n            />\n            <CheckBoxField\n                onChange={handleChange}\n                value={data.licence}\n                name=\"licence\"\n                error = {errors.licence}\n            >\n                    Подтвердить <a> лицензионно соглашение </a>\n            </CheckBoxField>\n            <button disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                          Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useState } from \"react/cjs/react.development\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(type === \"register\" ? type : \"login\");\n    const toggleFormType = (params) => {\n        setFormType(prevState => prevState === \"register\" ? \"login\" : \"register\");\n    };\n    return <div className=\"container mt-5\">\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                { formType === \"register\"\n                    ? <>\n                        <h3 className=\"mb-4\">Register</h3>\n                        <RegisterForm/>\n                        <p>Alredy have account? <a role=\"button\" onClick={toggleFormType}>Sign In</a></p>\n                    </>\n                    : <>\n                        <h3 className=\"mb-4\">Login</h3>\n                        <LoginForm/>\n                        <p>Dont have account? <a role=\"button\" onClick={toggleFormType}>Sign Up</a></p></>}\n            </div>\n        </div>\n    </div>;\n};\n\nexport default Login;\n","import React from \"react\";\nimport NavBar from \"./components/ui/navBar\";\nimport Users from \"./layouts/users\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Main from \"./layouts/main\";\nimport Login from \"./layouts/login\";\nconst App = () => {\n    return (\n        <div>\n            <NavBar/>\n            <Switch>\n                <Route path=\"/login/:type?\" component={Login} />\n                <Route path=\"/users/:userId?/:edit?\" component={Users} />\n                <Route path=\"/\" component={Main} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}